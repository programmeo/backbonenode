/**
 * Generate constants file content with proper formatting
 */
export function generateConstantsContent(options) {
  const { database, includeAuth, authFeatures, includeNotifications, notificationProviders } = options;

  const lines = [
    '/**',
    ' * Centralised constants loaded from environment variables.',
    ' * Generated by BackBone CLI.',
    ' */',
    '',
    'export const CONSTANTS = {',
    '  // Core settings',
    '  NODE_ENV: process.env.NODE_ENV || "development",',
    '  PORT: process.env.PORT || 3000,',
    '',
  ];

  if (database === 'mongoose') {
    lines.push(
      '  // Database',
      '  MONGODB_URI: process.env.MONGODB_URI,',
      ''
    );
  }

  if (includeAuth) {
    lines.push(
      '  // Authentication',
      '  JWT_SECRET: process.env.JWT_SECRET,',
      '  JWT_REFRESH_SECRET: process.env.JWT_REFRESH_SECRET,',
      '  JWT_ACCESS_EXPIRY: process.env.JWT_ACCESS_EXPIRY || "15m",',
      '  JWT_REFRESH_EXPIRY: process.env.JWT_REFRESH_EXPIRY || "7d",',
      '',
      '  // Password Reset',
      '  PASSWORD_RESET_SECRET: process.env.PASSWORD_RESET_SECRET,',
      '  PASSWORD_RESET_EXPIRY: process.env.PASSWORD_RESET_EXPIRY || "1h",',
      ''
    );

    lines.push(
      '  // Security',
      '  RATE_LIMIT_WINDOW: process.env.RATE_LIMIT_WINDOW || 15 * 60 * 1000,',
      '  RATE_LIMIT_MAX: process.env.RATE_LIMIT_MAX || 100,',
      ''
    );

    if (authFeatures?.includes('googleOAuth')) {
      lines.push(
        '  // OAuth (optional)',
        '  GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID,',
        '  GOOGLE_CLIENT_SECRET: process.env.GOOGLE_CLIENT_SECRET,',
        '  GOOGLE_CALLBACK_URL: process.env.GOOGLE_CALLBACK_URL,',
        ''
      );
    }

    // OTP / Magic link support
    if (authFeatures?.includes('otp') || authFeatures?.includes('magicLink')) {
      lines.push(
        '  // OTP / Magic Link',
        '  OTP_LENGTH: parseInt(process.env.OTP_LENGTH, 10) || 6,',
        '  OTP_EXPIRY: process.env.OTP_EXPIRY || 5 * 60 * 1000,',
        '  MAGIC_LINK_EXPIRY: process.env.MAGIC_LINK_EXPIRY || 15 * 60 * 1000,',
        ''
      );
    }
  }

  // Notifications
  if (includeNotifications) {
    if (notificationProviders?.includes('email')) {
      lines.push(
        '  // Email (Nodemailer)',
        '  EMAIL_HOST: process.env.EMAIL_HOST,',
        '  EMAIL_PORT: process.env.EMAIL_PORT,',
        '  EMAIL_USER: process.env.EMAIL_USER,',
        '  EMAIL_PASS: process.env.EMAIL_PASS,',
        '  EMAIL_FROM: process.env.EMAIL_FROM,',
        '  EMAIL_SECURE: process.env.EMAIL_SECURE || false,',
        ''
      );
    }

    if (notificationProviders?.includes('sms')) {
      lines.push(
        '  // SMS (Twilio)',
        '  TWILIO_ACCOUNT_SID: process.env.TWILIO_ACCOUNT_SID,',
        '  TWILIO_AUTH_TOKEN: process.env.TWILIO_AUTH_TOKEN,',
        '  TWILIO_PHONE_NUMBER: process.env.TWILIO_PHONE_NUMBER,',
        ''
      );
    }
  }


  lines.push('};', '');
  return lines.join('\n');
}